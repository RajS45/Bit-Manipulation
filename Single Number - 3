->> Single Number - 3

import java.util.*;
class Solution {
    public int[] singleNumber(int[] nums) {
        int n = nums.length;
        long xor = 0;
        for (int i = 0; i < n; i++) {
            xor ^= nums[i];
        }
        int rightmost = (int)(xor & (xor - 1)) ^ (int)xor;
        int xor1 = 0;
        int xor2 = 0;
        for (int i = 0; i < n; i++) {
            if ((nums[i] & rightmost) != 0) {
                xor1 ^= nums[i];
            } else {
                xor2 ^= nums[i];
            }
        }
        if (xor1 < xor2) {
            return new int[]{xor1, xor2};
        }
        return new int[]{xor2, xor1};
    }
    public static void main(String[] args) {
        Solution sol = new Solution();
        int[] nums = {1, 2, 1, 3, 2, 5};
        int[] result = sol.singleNumber(nums);
        System.out.println("The two unique numbers are: " + Arrays.toString(result));
    }
}
