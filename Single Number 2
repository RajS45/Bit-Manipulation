 ->> Single Number II
Method - 1
import java.util.Arrays;
class Solution {
    public int singleNumber(int[] nums) {
        int n = nums.length;
        Arrays.sort(nums);
        for (int i = 1; i < nums.length; i += 3) {
            if (nums[i] != nums[i - 1]) {
                return nums[i - 1];
            }
        }
        return nums[n - 1];
    }
    public static void main(String[] args) {
        int[] nums = {2, 2, 2, 3};
        Solution sol = new Solution();
        int ans = sol.singleNumber(nums);
        System.out.println("The single number in given array is: " + ans);
    }
}

Method - Optimal Approach
class Solution {
    public int singleNumber(int[] nums) {
        int cnt1 = 0;
        int cnt2 = 0;
        for(int i=0;i<nums.length;i++){
            cnt1 = (cnt1 ^ nums[i]) & ~cnt2;
            cnt2 = (cnt2 ^ nums[i]) & ~cnt1;
        }
        return cnt1;
    }
    public static void main (String []args){
        int []arr={1,2,4,2,1,31,1};
        Solution sol = new Solution();
        int r = sol.singleNumber(arr);
        System.out.println(r);
    }
}
